// 划分为k个相等的子集
// 给定一个整数数组  nums 和一个正整数 k，
// 找出是否有可能把这个数组分成 k 个非空子集，其总和都相等。
// 测试链接 : https://leetcode.cn/problems/partition-to-k-equal-sum-subsets/
#include<bits/stdc++.h>
using namespace std;

int n, k, a[100], sum, dp[3000000];

bool f(int status,int limit, int cur, int rest) {
	if (rest == 0)return status == 0;
	if (dp[status] != 0)return dp[status] == 1;
	bool ans = false;
	for (int i = 0;i < n;i++) {
		if ((status & (1 << i)) != 0 && a[i] + cur <= limit) {
			if (cur + a[i] < limit) {
				ans = f(status ^ (1 << i), limit, cur + a[i], rest);
			}
			else {
				ans = f(status ^ (1 << i), limit, 0, rest - 1);
			}
			if (ans)break;
		}
	}
	dp[status] = ans ? 1 : -1;
	return ans;
}

bool solve() {
	if (sum % k != 0)return false;
	return f((1 << n) - 1, sum / 4, 0, k);
}

int main() {
	cin >> n >> k;
	for (int i = 0;i < n;i++) {
		cin >> a[i];
		sum += a[i];
	}
	if (solve())cout << "true" << "\n";
	else cout << "false" << "\n";
	return 0;
}
